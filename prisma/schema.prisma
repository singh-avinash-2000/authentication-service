generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  first_name    String     @db.VarChar(20)
  middle_name   String?    @db.VarChar(20)
  last_name     String?    @db.VarChar(20)
  email         String     @unique
  password_hash String?
  google_id     String?
  facebook_id   String?
  github_id     String?
  status        UserStatus @default(Active)
  created_at    DateTime   @default(now())
  modified_at   DateTime   @updatedAt
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String           @unique @db.VarChar(20)
  description    String           @db.VarChar(255)
  created_at     DateTime         @default(now())
  modified_at    DateTime         @updatedAt
  RolePermission RolePermission[]
}

model Permission {
  id             Int              @id @default(autoincrement())
  name           String           @unique @db.VarChar(30)
  description    String           @db.VarChar(255)
  created_at     DateTime         @default(now())
  modified_at    DateTime         @updatedAt
  RolePermission RolePermission[]
}

model RolePermission {
  roleId       Int
  permissionId Int
  createdAt    DateTime   @default(now())
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

enum UserStatus {
  Active
  Inactive
  Deleted
  Blocked
}
